{"ast":null,"code":"import axios from \"axios\";\nconst googleKey = process.env.REACT_APP_GOOGLE_KEY;\nconst weatherbitKey = process.env.REACT_APP_WEATHERBIT_KEY;\nexport default {\n  getWeather: function (location) {\n    return axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${location}&key=${googleKey}`).then(res => {\n      if (!res.data.results.length) {\n        return alert(\"Not a valid location!\");\n      }\n\n      const {\n        lat,\n        lng: lon\n      } = res.data.results[0].geometry.location;\n      return axios.get(`https://api.weatherbit.io/v2.0/forecast/daily?lat=${lat}&lon=${lon}&units=I&days=7&key=${weatherbitKey}`);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n};","map":{"version":3,"sources":["/Users/shaunalarkin/BootCamp/HW/React-Weather/src/utils/API.js"],"names":["axios","googleKey","process","env","REACT_APP_GOOGLE_KEY","weatherbitKey","REACT_APP_WEATHERBIT_KEY","getWeather","location","get","then","res","data","results","length","alert","lat","lng","lon","geometry","catch","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,oBAA9B;AACA,MAAMC,aAAa,GAAGH,OAAO,CAACC,GAAR,CAAYG,wBAAlC;AAEA,eAAe;AACXC,EAAAA,UAAU,EAAE,UAASC,QAAT,EAAmB;AAC3B,WAAOR,KAAK,CAACS,GAAN,CAAW,6DAA4DD,QAAS,QAAOP,SAAU,EAAjG,EACFS,IADE,CACGC,GAAG,IAAI;AACT,UAAI,CAACA,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiBC,MAAtB,EAA8B;AAC1B,eAAOC,KAAK,CAAC,uBAAD,CAAZ;AACH;;AAED,YAAM;AAAEC,QAAAA,GAAF;AAAOC,QAAAA,GAAG,EAAEC;AAAZ,UAAoBP,GAAG,CAACC,IAAJ,CAASC,OAAT,CAAiB,CAAjB,EAAoBM,QAApB,CAA6BX,QAAvD;AACA,aAAOR,KAAK,CAACS,GAAN,CAAW,qDAAoDO,GAAI,QAAOE,GAAI,uBAAsBb,aAAc,EAAlH,CAAP;AAGH,KAVE,EAWFe,KAXE,CAWIC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAbE,CAAP;AAcH;AAhBU,CAAf","sourcesContent":["import axios from \"axios\";\nconst googleKey = process.env.REACT_APP_GOOGLE_KEY;\nconst weatherbitKey = process.env.REACT_APP_WEATHERBIT_KEY;\n\nexport default {\n    getWeather: function(location) {\n        return axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${location}&key=${googleKey}`)\n            .then(res => {\n                if (!res.data.results.length) {\n                    return alert(\"Not a valid location!\");\n                }\n\n                const { lat, lng: lon } = res.data.results[0].geometry.location;\n                return axios.get(`https://api.weatherbit.io/v2.0/forecast/daily?lat=${lat}&lon=${lon}&units=I&days=7&key=${weatherbitKey}`);\n\n\n            })\n            .catch(err => {\n                console.log(err);\n            })\n    }\n}"]},"metadata":{},"sourceType":"module"}